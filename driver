from tkinter import *

#Variables
hoursList=[0,0,0,0,0,0]#bill added.

#member variables
#counter = 0
#count

class StudentHours(self):
    def __init__(self):
        self.count = 0
        self.hoursList = [0]

    def count(self):
        self.count += 1

    def checkLimit(self):
        return self.count <= 6

    def resetCount(self):
        self.count = 0

    def appendHours(self, toList):
        if self.checkLimit():
            print("Amount of hours exceeded, must calculate or reset.")
            return

        if len(self.hoursList) == 1:
            self.hoursList[0] = toList
        else:
            self.hoursList.append(toList)


stuHours = StudentHours()

class App:
    def __init__(self, master):
        self.name = ""
        self.course = []
        self.hours = []
        self.average = 0

        window=Frame(master)
        window.pack()

        #Create the window to hold everything.
        Label(window, Text="tudent Records Program")


        #Name field and button
        nString = StringVar()
        name_textField = Entry(window, textVariable=nString, command=self.clearField)
        name_Submit_Button = Button(window, text = "Submit", fg ="green", command=self.printName)

        #Course field and button
        course_TextField = Entry(window, textVariable=nString, command=self.clearField)
        course_Submit_Button = Button(window, text = "Submit", fg ="green", command =self.printCourse)

        #Hours field and button
        hours_TextField = Entry(window, textVariable=nString, command=self.clearField)
        hours_Submit_Button = Button(window, textVariable=nString, command=self.clearField)

        #Calculate average button
        caclulateAverageHoursButton = Button(window, text = "Submit", fg ="green", command =self.printCourse)

    def clearField(self,event):
        #event.delete(0, 'end')
        print("Will clear field when works.")

    def printName(self):
        print(self.name)

    def printCourse(self):
        print(self.course)

    def printHours(self):
        print(self.hours)

    def calculateAverage(self):
        return hoursList.count()/len(hoursList)

    def printAverage(self):
        print(self.calculateAverage())



root = Tk()
#lbl = Label(window, text ="Student Records Program")

#name field and submit button.
#v_name = StringVar()
#entry_name = Entry(window, textvariable = v_name, bg="black", fg="white")
entry_name.delete(0, END)
entry_name.insert(0, "Write your name:")
#def printName():
 #   s_name = v_name.get()
  #  print(s_name)
#button_name = Button(text = "Submit", fg ="green", command = printName)

#course entry
#v_course = StringVar()
entry_course = Entry(window, textvariable = v_course, bg="black", fg="white")
entry_course.delete(0, END)
entry_course.insert(0, "Write your course:")
def printCourse():
    s_course = v_course.get()
    print(s_course)
button_course = Button(text = "Submit", fg ="green", command = printCourse)

#hours
#TODO: cap the entry at 6 submissions
v_hours = IntVar()
entry_c_hours = Entry(window, textvariable = v_hours, bg="black", fg="white")
entry_c_hours.delete(0, END)
entry_c_hours.insert(0, "Course hours:")
def printHours():
    s_hours = v_hours.get()
    if s_hours>10:
        print("You cannot take that much hours")
    else:
        print(s_hours)
    return s_hours
button_c_hours = Button(text = "Submit", fg ="green", command = printHours)

button_calculate = Button(text = "Calculate Average", fg ="blue")
v_test = StringVar()

entry_test = Entry(window, textvariable = v_test, bg="black", fg="white")
entry_test.delete(0, END)
entry_test.insert(0, "Write your test score:")

def testGPA():
    s_test = v_test.get()
    if s_test == "I" or s_test == "i":
        print(s_test.upper()+'ncomplete')
    elif s_test == "w" or s_test == "W":
        print(s_test.upper()+'ithdrawn')
    else:
        s_test = int(s_test)
        if s_test>100:
            print("You prompted invalid test score")
        elif s_test<100 and s_test>=97:
            print("Your  score is ", s_test, ". \nYourgrade is A+")
        elif s_test>=93 and s_test<=96:
            print("Your  score is ", s_test, ". \nYourgrade is A")
        elif s_test>=90 and s_test<=92:
            print("Your  score is ", s_test, ". \nYourgrade is A_")
        elif s_test>=87 and s_test<=89:
            print("Your  score is ", s_test, ". \nYourgrade is B+")
        elif s_test>=83 and s_test<=86:
            print("Your  score is ", s_test, ". \nYourgrade is B")
        elif s_test>=80 and s_test<=82:
            print("Your  score is ", s_test, ". \nYourgrade is B-")
        elif s_test>=77 and s_test<=79:
            print("Your  score is ", s_test, ". \nYourgrade is C+")
        elif s_test>=73 and s_test<=76:
            print("Your  score is ", s_test, ". \nYourgrade is C")
        elif s_test>=70 and s_test<=72:
            print("Your  score is ", s_test, ". \nYourgrade is C-")
        elif s_test>=67 and s_test<=69:
            print("Your  score is ", s_test, ". \nYourgrade is D+")
        elif s_test>=65 and s_test<=66:
            print("Your  score is ", s_test, ". \nYourgrade is D")
        else:
            print("Your  score is below 65. \nYourgrade is F")
        return s_test

def GPA():
    checkGPA = v_test.get()
    checkGPA = int(checkGPA)
    if checkGPA >100:
        print("Check your test score")
    elif checkGPA<100 and checkGPA>=97:
        print(4.0)
    elif checkGPA>=93 and checkGPA<=96:
        print(4.0)
    elif checkGPA>=90 and checkGPA<=92:
        print(3.7)
    elif checkGPA>=87 and checkGPA<=89:
        print(3.3)
    elif checkGPA>=83 and checkGPA<=86:
        print(3.0)
    elif checkGPA>=80 and checkGPA<=82:
        print(2.7)
    elif checkGPA>=77 and checkGPA<=79:
        print(2.3)
    elif checkGPA>=73 and checkGPA<=76:
        print(2.0)
    elif checkGPA>=70 and checkGPA<=72:
        print(1.7)
    elif checkGPA>=67 and checkGPA<=69:
        print(1.3)
    elif checkGPA>=65 and checkGPA<=66:
        print(1.0)
    else:
        print("Go studying")

button_test = Button(text = "Submit", fg ="green", command = testGPA)
button_GPA = Button(text = "Get GPA", fg = "blue", command = GPA)


lbl.grid(row=0, column=0)
entry_name.grid(row=2, column=0)
entry_course.grid(row=4, column=0)
entry_c_hours.grid(row=6, column=0)
entry_test.grid(row=9, column=0)
button_name.grid(row=2, column=1)
button_course.grid(row=4, column=1)
button_c_hours.grid(row=6, column=1)
button_calculate.grid(row=7, column=0)
button_test.grid(row=9, column=1)
button_GPA.grid(row=11, column=0)
lbl = Label(window, text="Student Records Calculator")


window.mainloop()

